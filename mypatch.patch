From 60dddbec6fcded156ed41844ec72479c662e6992 Mon Sep 17 00:00:00 2001
From: Kjell Kvinge <kjell@kvinge.biz>
Date: Thu, 2 Jul 2020 23:48:31 +0200
Subject: [PATCH 1/2] show version

---
 src/components/LayerUI.tsx | 1 +
 src/css/styles.scss        | 8 ++++++++
 2 files changed, 9 insertions(+)

diff --git a/src/components/LayerUI.tsx b/src/components/LayerUI.tsx
index 3f17345..ca4b573 100644
--- a/src/components/LayerUI.tsx
+++ b/src/components/LayerUI.tsx
@@ -244,6 +244,7 @@ const LayerUI = ({
               />
             </Island>
             {renderEncryptedIcon()}
+            <div id="version">v:<span>{process.env.REACT_APP_VERSION}</span></div>
           </Section>
         </Stack.Col>
       </div>
diff --git a/src/css/styles.scss b/src/css/styles.scss
index 61a082e..bf7c3a7 100644
--- a/src/css/styles.scss
+++ b/src/css/styles.scss
@@ -188,6 +188,14 @@ button,
   }
 }
 
+#version {
+    color: darkgray;
+    padding-top: 2em;
+    padding-left: 1em;
+    font-size: small;
+    font-family: monospace;
+}
+
 .App-bottom-bar {
   position: absolute;
   top: 0;
-- 
2.17.1


From 1affa9211adf47c5cbf58c74e565de596f8b4158 Mon Sep 17 00:00:00 2001
From: Kjell Kvinge <kjell@kvinge.biz>
Date: Tue, 30 Jun 2020 09:42:30 +0200
Subject: [PATCH 2/2] Disable crypto

---
 src/data/index.ts | 16 ++++++++--------
 1 file changed, 8 insertions(+), 8 deletions(-)

diff --git a/src/data/index.ts b/src/data/index.ts
index 129f6b4..98fb2d8 100644
--- a/src/data/index.ts
+++ b/src/data/index.ts
@@ -80,7 +80,7 @@ const generateRandomID = async () => {
   return Array.from(arr, byteToHex).join("");
 };
 
-const generateEncryptionKey = async () => {
+/*const generateEncryptionKey = async () => {
   const key = await window.crypto.subtle.generateKey(
     {
       name: "AES-GCM",
@@ -90,7 +90,7 @@ const generateEncryptionKey = async () => {
     ["encrypt", "decrypt"],
   );
   return (await window.crypto.subtle.exportKey("jwk", key)).k;
-};
+};*/
 
 const createIV = () => {
   const arr = new Uint8Array(12);
@@ -107,7 +107,7 @@ export const getCollaborationLinkData = (link: string) => {
 
 export const generateCollaborationLink = async () => {
   const id = await generateRandomID();
-  const key = await generateEncryptionKey();
+  const key = "none"; //await generateEncryptionKey();
   return `${window.location.origin}${window.location.pathname}#room=${id},${key}`;
 };
 
@@ -184,7 +184,7 @@ export const exportToBackend = async (
   const json = serializeAsJSON(elements, appState);
   const encoded = new TextEncoder().encode(json);
 
-  const key = await window.crypto.subtle.generateKey(
+  /*  const key = await window.crypto.subtle.generateKey(
     {
       name: "AES-GCM",
       length: 128,
@@ -208,18 +208,18 @@ export const exportToBackend = async (
   // We use jwk encoding to be able to extract just the base64 encoded key.
   // We will hardcode the rest of the attributes when importing back the key.
   const exportedKey = await window.crypto.subtle.exportKey("jwk", key);
-
+*/
   try {
     const response = await fetch(BACKEND_V2_POST, {
       method: "POST",
-      body: encrypted,
+      body: encoded,
     });
     const json = await response.json();
     if (json.id) {
       const url = new URL(window.location.href);
       // We need to store the key (and less importantly the id) as hash instead
       // of queryParam in order to never send it to the server
-      url.hash = `json=${json.id},${exportedKey.k!}`;
+      url.hash = `json=${json.id},none`;
       const urlString = url.toString();
 
       window.prompt(`ðŸ”’${t("alerts.uploadedSecurly")}`, urlString);
@@ -248,7 +248,7 @@ export const importFromBackend = async (
       return restore(elements, appState, { scrollToContent: true });
     }
     let data;
-    if (privateKey) {
+    if (privateKey && privateKey !== "none") {
       const buffer = await response.arrayBuffer();
       const key = await getImportedKey(privateKey, "decrypt");
       const iv = new Uint8Array(12);
-- 
2.17.1

